services:
  db:
    image: postgres:18
    container_name: plane-sailing-db
    environment:
      POSTGRES_USER: ${PLANE_SAILING_DB_USER}
      POSTGRES_PASSWORD: ${PLANE_SAILING_DB_PASSWORD}
      POSTGRES_DB: ${PLANE_SAILING_DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
      # Mount the migrations directory to the location where Flyway expects to find SQL migration files
      - ./migrations:/flyway/sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PLANE_SAILING_DB_USER} -d ${PLANE_SAILING_DB_NAME}"]
      interval: 10s
      retries: 5
      start_period: 30s
    networks:
      - plane-sailing-net

  flyway:
    image: flyway/flyway
    container_name: plane-sailing-flyway
    depends_on:
      - db
    environment:
      # NOTE that flyway references the 'db' service by its name, leveraging the Docker Compose internal DNS
      FLYWAY_URL: jdbc:postgresql://db:5432/${PLANE_SAILING_DB_NAME}
      FLYWAY_USER: ${PLANE_SAILING_DB_USER}
      FLYWAY_PASSWORD: ${PLANE_SAILING_DB_PASSWORD}
    command: -locations=filesystem:/flyway/sql migrate
    volumes:
      - ./migrations:/flyway/sql:ro
    networks:
      - plane-sailing-net
    # Ensure Flyway runs only once and does not restart
    restart: "no"

volumes:
  pgdata:
  # migrations:

networks:
  plane-sailing-net:
    driver: bridge
